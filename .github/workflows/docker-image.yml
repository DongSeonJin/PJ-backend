name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


# 코드의 내용을 이 파일을 실행하여 action을 수행하는 주체(Github Actions에서 사용하는 VM)가 읽을 수 있도록 허용합니다.
permissions:
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 지정한 저장소(현재 REPO)에서 코드를 워크플로우 환경으로 가져오도록 하는 github action
    - uses: actions/checkout@v3

    # open jdk 17 버전 환경을 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
       java-version: '17'
       distribution: "adopt"
       

   
   # gradle을 통해 소스를 빌드. 
   # 암호화된 application.properties Jasypt key값 환경변수 세팅
    - name: Build with Gradle
      env:
        JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
      run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test



    # dockerfile을 통해 이미지를 빌드하고, 이를 docker repo로 push 합니다.
    # 이 때 사용되는 ${{ secrets.DOCKER_REPO }}/directors-dev 가 위에서 만든 도커 repository 입니다.
    - name: Docker build & push to docker repo
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/shopfit .
          docker push ${{ secrets.DOCKER_REPO }}/shopfit

    - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.AWS_APPLICATION_NAME }}
        environment_name: ${{ secrets.AWS_ENVIRONMENT_NAME }}
        region: ap-northeast-2
        deployment_package: docker-compose.yml
